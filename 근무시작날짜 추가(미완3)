package javamainl;
import java.util.Scanner;
import java.util.Stack;
import java.util.Arrays;
import java.util.Comparator;
class Calendar{ //입력한 달에 월요일~일요일이 각 몇번 있는지를 나타내는 클래스
	Scanner sc = new Scanner(System.in);
	int[] days = new int[12];
	int year,month,monthDay;
	int[] SEVEN = new int[7];
	String first_day;
	public void input() {
		System.out.println("년을 입력하세요");
		year= sc.nextInt();
		System.out.println("월을 입력하세요");
		month = sc.nextInt();
		System.out.println("시작 요일을 입력하세요");
		first_day = sc.next();
	}
	public void Leap_year() { //윤년 검사
		if( year % 4==0) {
			days = new int[] {31,29,31,30,31,30,31,31,30,31,30,31};
		}
		else { 
			days = new int[] {31,28,31,30,31,30,31,31,30,31,30,31};
		}
		for(int i = 0 ; i < SEVEN.length; i++) {
			SEVEN[i] = 4;
		}
	} 
	// 월요일이라고 입력했으면 그 달의 월요일이 총 몇개인지 나타내주는 메소드들
	public void Start_day_Select() {
		monthDay = days[month-1];
		if(first_day.equals("월")) { // .equal() 안쓰면 비교 불가 이유 -깃허브에 올림
			if(monthDay == 31) {
			for(int i = 0; i < 3; i++) {
				 SEVEN[i] +=1;
			}
			if(monthDay == 30) {
				for(int j =0; j<2 ; j++) {
					SEVEN[j] +=1;		
				}
			}
			}
		}
		else if(first_day.equals("화")) {
			if(monthDay == 31) {
			for(int i = 1; i < 4; i++) {
				 SEVEN[i] +=1;
			}
			if(monthDay == 30) {
				for(int j =1; j<3 ; j++) {
					SEVEN[j] +=1;
				}
			}
			}
		}
		else if(first_day.equals("수")) {
			if(monthDay == 31) {
			for(int i = 2; i < 5; i++) {
				 SEVEN[i] +=1;
			}
			if(monthDay == 30) {
				for(int j =2; j<4 ; j++) {
					SEVEN[j] +=1;
				}
			}
			}
		}
		else if(first_day.equals("목")) {
			if(monthDay == 31) {
			for(int i = 3; i < 6; i++) {
				 SEVEN[i] +=1;
			}
			if(monthDay == 30) {
				for(int j =3; j<5 ; j++) {
					SEVEN[j] +=1;
				}
			}
			}
		}
		else if(first_day.equals("금")) {
			if(monthDay == 31) {
			for(int i = 4; i < 7; i++) {
				 SEVEN[i] +=1;
			}
			if(monthDay == 30) {
				for(int j =4; j<6 ; j++) {
					SEVEN[j] +=1;
				}
			}
			
			}
		}
		else if(first_day.equals("토")) {
			if(monthDay == 31) {
			for(int i = 5; i < 7; i++) {
				 SEVEN[i] +=1;
			}
				SEVEN[0] += 1 ;
			}
			if(monthDay == 30) {
				for(int j =5; j<7 ; j++) {
					SEVEN[j] +=1;
				}
			}
			}
		else if(first_day.equals("일")) {
			if(monthDay == 31) {
				SEVEN[6] +=1;
				SEVEN[0] +=1;
				SEVEN[1] +=1;
			if(monthDay == 30) {
				SEVEN[6] +=1;
				SEVEN[0] +=1;
			}	
			}
		}
	}
	}
class Solution extends Calendar{ //날짜 클래스를 상속받음
	Scanner sc = new Scanner(System.in);
	int result=0;
	int startDay;
	int subtraction;
	static int pay = 8720;
	int mon, tue, wed,thur,fri,sat,sun;
	int mon_result, tue_result, wed_result, thur_result, fri_result, sat_result, sun_result ;  
	int[] dayCount = new int[7];
	int share ; //몫
	int remainder; //나머지
	public void Start_day() {//근무 시작일
	//시작일을 입력하면 그 전까지의 근무양을 총 보수로 환산한 다음 result에서 뺴주면 되는거 아잉교
	//문제는.. 1일의 요일부터 근무시작일까지의 근무요일이 어떻게 계산되는지 짜는거..
	//예를들어 8일날 근무를 시작했다고 가정하고, 월요일시작이라고 가정하면, 월요일은 두번들어가게 되는겨.
	//반대로 목요일은 한번 들어가겠지. 이것을 고려해야함.
	 startDay = sc.nextInt(); 
	// 13일이라 입력했으면 1일 시작일 월요일을 입력한거부터 월 화 수 목 금 토 일 월 화 수 목 금 에서
	//월이 두번 들어갔으니 이 값을 빼면 됨.!
	//15일이면 7로 쪼개서 13 /7 - > 1에 나머지 6다 . 그럼 몫을 저장하는 변수를 하나 만들어야겠다.
	 share = startDay /7; //월화수목금토일 7일 돌아가면 3일치 근무 빠지는거 월~월 /2 ~월 나머지 1 총 +3
	 remainder = startDay % 7;
	 
	 for(int i = 0 ; i<dayCount.length; i++) {
		dayCount[i] += 1; 
	 }
	 //나머지 만큼 dayCount에 더하는 로직 
	 if(first_day.equals("월")) {
		for(int i = 0; i<remainder; i++) {
			dayCount[i] +=1;
		}
	 }
	 if(first_day.equals("화")) {
			for(int i = 1; i<remainder; i++) {
				dayCount[i] +=1;
			}		 
	 }
	 if(first_day.equals("수")) {
			for(int i = 2; i<remainder; i++) {
				dayCount[i] +=1;
			}
	 }
	 if(first_day.equals("목")) {
			for(int i = 3; i<remainder; i++) {
				dayCount[i] +=1;
			}
	 }
	 if(first_day.equals("금")) {
			for(int i = 4; i<remainder; i++) {
				dayCount[i] +=1;
			}
	 }
	 if(first_day.equals("토")) {
			for(int i = 5; i<remainder; i++) {
				dayCount[i] +=1;
			}
	 }
	 if(first_day.equals("일")) {
			for(int i = 6; i<remainder; i++) {
				dayCount[i] +=1;
			}
	
	 } 
	}
	int monStart,tueStart,wedStart,thurStart,friStart,satStart,sunStart;
	public void Jun_seok() {
	wed = 6;
	wed_result =wed*SEVEN[2]*pay;
	sun = 10;
	sun_result =sun*SEVEN[6]*pay;
	
	//시작날짜 반영
	wedStart = SEVEN[2] - dayCount[2];
	sunStart = SEVEN[6] - dayCount[6];
	int startDayInput;
	System.out.println("준석의 근무시작일을 입력해주세요");
	startDayInput = sc.nextInt();
	if(startDayInput > 1) {
		Start_day();
	}
	else{result = wed_result + sun_result;}
	System.out.println("준석이의 급여는"+result+"원 입니다!");
	}
	public void Jung_yun() {
	 mon = 4;
	 tue = 4;
	 wed = 3;
	 thur = 3;
	 mon_result =mon*SEVEN[0]*pay;
	 tue_result = tue*SEVEN[1]*pay;
	 wed_result =wed*SEVEN[2]*pay;
	 thur_result =thur*SEVEN[3]*pay;
	 monStart =SEVEN[2] - dayCount[2];
	 tueStart =SEVEN[2] - dayCount[2];
	 wedStart =SEVEN[2] - dayCount[2];
	 thurStart = SEVEN[2] - dayCount[2];
	 int startDayInput;
		System.out.println("준석의 근무시작일을 입력해주세요");
		startDayInput = sc.nextInt();
		if(startDayInput > 1) {
			Start_day();
		}
		else{result = mon_result + tue_result + wed_result+ thur_result;}
	 System.out.println("정연이의 급여는"+result+"원 입니다!");
	} 
	public void Hee_jun() {
		mon = 5;
		tue = 5;
		wed = 6;
		thur = 4;
		sat = 4;
		//그냥 급여
		mon_result =mon*SEVEN[0]*pay;
		 tue_result = tue*SEVEN[1]*pay;
		 wed_result =wed*SEVEN[2]*pay;
		 thur_result =thur*SEVEN[3]*pay;
		 sat_result =sat*SEVEN[5]*pay;
		
		 //시작날짜 반영
		 monStart = SEVEN[0] - dayCount[0];
		 tueStart =SEVEN[1] - dayCount[1];
		 wedStart =SEVEN[2] - dayCount[2];
		 thurStart =SEVEN[3] - dayCount[3];
		 satStart =SEVEN[5] - dayCount[5];
		 int startDayInput;
			System.out.println("준석의 근무시작일을 입력해주세요");
			startDayInput = sc.nextInt();
			if(startDayInput > 1) {
				Start_day();
			}
			else{result = mon_result + tue_result + wed_result+ thur_result + sat_result;}	
		System.out.println("희준이의 급여는"+result+"원 입니다!");
	}
	public void Chae_young() {
		thur = 4;
		fri = 10;
		thur_result =thur*SEVEN[3]*pay;
		 fri_result =fri*SEVEN[4]*pay;
		 thurStart =SEVEN[2] - dayCount[2];
		 friStart =SEVEN[2] - dayCount[2];
		 int startDayInput;
			System.out.println("준석의 근무시작일을 입력해주세요");
			startDayInput = sc.nextInt();
			if(startDayInput > 1) {
				Start_day();
			}	
			else{result = thur_result + fri_result;}
		System.out.println("채영이의 급여는"+result+"원 입니다!");
	}
	public void Jae_lim() {
		fri = 6;
		sat = 5;
		fri_result =fri*SEVEN[4]*pay;
		sat_result =sat*SEVEN[5]*pay;
		
		//시작날짜 반영
		friStart=SEVEN[4] - dayCount[4];
		satStart=SEVEN[5] - dayCount[5];
		int startDayInput;
		System.out.println("준석의 근무시작일을 입력해주세요");
		startDayInput = sc.nextInt();
		if(startDayInput > 1) {
			Start_day();
		}
		else{result = mon_result + tue_result + wed_result+ thur_result;}
	System.out.println("재림이의 급여는"+result+"원 입니다!");
	}
	public void Su_yun() {
		sat = 6;
		sun = 8;
		sat_result =sat*SEVEN[5]*pay;
		 sun_result =sun*SEVEN[6]*pay;
		 
		//시작날짜 반영
		 satStart=SEVEN[5] - dayCount[5];
		 sunStart=SEVEN[6] - dayCount[6];
		 int startDayInput;
			System.out.println("준석의 근무시작일을 입력해주세요");
			startDayInput = sc.nextInt();
			if(startDayInput > 1) {
				Start_day();
			}
			else{result = sat_result + sun_result;}
		System.out.println("수연이의 급여는"+result+"원 입니다!");
	}
	public void Ga_young() {
		mon = 3;
		tue = 3;
		wed = 4;
		thur = 4;
		mon_result =mon*SEVEN[0]*pay;
		 tue_result = tue*SEVEN[1]*pay;
		 wed_result =wed*SEVEN[2]*pay;
		 thur_result =thur*SEVEN[3]*pay;
		 
		//시작날짜 반영
		 monStart=SEVEN[0] - dayCount[0];
		 tueStart=SEVEN[1] - dayCount[1];
		 wedStart=SEVEN[2] - dayCount[2];
		 thurStart=SEVEN[3] - dayCount[3];
		 int startDayInput;
			System.out.println("준석의 근무시작일을 입력해주세요");
			startDayInput = sc.nextInt();
			if(startDayInput > 1) {
				Start_day();
			}
			else{result = mon_result + tue_result + wed_result + thur_result;}
		System.out.println("가영이의 급여는"+result+"원 입니다!");
	}
	public void Min_ji() {
		mon = 7;
		tue = 7;
		mon_result =mon*SEVEN[0]*pay;
		 tue_result = tue*SEVEN[1]*pay;
		
		 //시작날짜 반영
		 monStart=SEVEN[0] - dayCount[0];
		 tueStart=SEVEN[1] - dayCount[1];
		 int startDayInput;
			System.out.println("준석의 근무시작일을 입력해주세요");
			startDayInput = sc.nextInt();
			if(startDayInput > 1) {
				Start_day();
			}
			else{result = mon_result+ tue_result;}
		System.out.println("민지의 급여는"+result+"원 입니다!");
	}
	public void Se_bin() {
	thur = 4;
	fri =3;
	sat = 3;
	thur_result =thur*SEVEN[3]*pay;
	 fri_result =fri*SEVEN[4]*pay;
	 sat_result =sat*SEVEN[5]*pay;
	 
	 //시작날짜 반영
	 thurStart=SEVEN[3] - dayCount[3];
	 friStart=SEVEN[4] - dayCount[4];
	 satStart=SEVEN[5] - dayCount[5];
	 int startDayInput;
		System.out.println("준석의 근무시작일을 입력해주세요");
		startDayInput = sc.nextInt();
		if(startDayInput > 1) {
			Start_day();
		}
		else{result = thur_result + fri_result + sat_result;}
	System.out.println("세빈이의 급여는"+result+"원 입니다!");
	}
	public void De_ta() {//대타자
	
	
	}
	
	
}

public class javapractice {
	public static void main(String[] args) {
		Solution c1 = new Solution();
		c1.input();
		c1.Leap_year();
		c1.Start_day_Select();
		c1.Jun_seok();
		c1.Jung_yun();
		c1.Hee_jun();
		c1.Chae_young();
		c1.Jae_lim();
		c1.Su_yun();
		c1.Ga_young();
		c1.Min_ji();
		c1.Se_bin();
	}   	
}
