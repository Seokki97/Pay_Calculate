package javamainl;
import java.util.Scanner;
import java.util.Stack;
import java.util.Arrays;
import java.util.Comparator;
class Calendar{ //입력한 달에 월요일~일요일이 각 몇번 있는지를 나타내는 클래스
	Scanner sc = new Scanner(System.in);
	int[] days = new int[12];
	int year,month,monthDay;
	int[] SEVEN = new int[7];
	String first_day;
	public void input() {
		System.out.println("년을 입력하세요");
		year= sc.nextInt();
		System.out.println("월을 입력하세요");
		month = sc.nextInt();
		System.out.println("시작 요일을 입력하세요");
		first_day = sc.next();
	}
	public void Leap_year() { //윤년 검사
		if( year % 4==0) {
			days = new int[] {31,29,31,30,31,30,31,31,30,31,30,31};
		}
		else { 
			days = new int[] {31,28,31,30,31,30,31,31,30,31,30,31};
		}
		for(int i = 0 ; i < SEVEN.length; i++) {
			SEVEN[i] = 4;
		}
	} 
	// 월요일이라고 입력했으면 그 달의 월요일이 총 몇개인지 나타내주는 메소드들
	public void Start_day_Select() {
		monthDay = days[month-1];
		if(first_day.equals("월")) { // .equal() 안쓰면 비교 불가 이유 -깃허브에 올림
			if(monthDay == 31) {
			for(int i = 0; i < 3; i++) {
				 SEVEN[i] +=1;
			}
			if(monthDay == 30) {
				for(int j =0; j<2 ; j++) {
					SEVEN[j] +=1;		
				}
			}
			}
		}
		else if(first_day.equals("화")) {
			if(monthDay == 31) {
			for(int i = 1; i < 4; i++) {
				 SEVEN[i] +=1;
			}
			if(monthDay == 30) {
				for(int j =1; j<3 ; j++) {
					SEVEN[j] +=1;
				}
			}
			}
		}
		else if(first_day.equals("수")) {
			if(monthDay == 31) {
			for(int i = 2; i < 5; i++) {
				 SEVEN[i] +=1;
			}
			if(monthDay == 30) {
				for(int j =2; j<4 ; j++) {
					SEVEN[j] +=1;
				}
			}
			}
		}
		else if(first_day.equals("목")) {
			if(monthDay == 31) {
			for(int i = 3; i < 6; i++) {
				 SEVEN[i] +=1;
			}
			if(monthDay == 30) {
				for(int j =3; j<5 ; j++) {
					SEVEN[j] +=1;
				}
			}
			}
		}
		else if(first_day.equals("금")) {
			if(monthDay == 31) {
			for(int i = 4; i < 7; i++) {
				 SEVEN[i] +=1;
			}
			if(monthDay == 30) {
				for(int j =4; j<6 ; j++) {
					SEVEN[j] +=1;
				}
			}
			
			}
		}
		else if(first_day.equals("토")) {
			if(monthDay == 31) {
			for(int i = 5; i < 7; i++) {
				 SEVEN[i] +=1;
			}
				SEVEN[0] += 1 ;
			}
			if(monthDay == 30) {
				for(int j =5; j<7 ; j++) {
					SEVEN[j] +=1;
				}
			}
			}
		else if(first_day.equals("일")) {
			if(monthDay == 31) {
				SEVEN[6] +=1;
				SEVEN[0] +=1;
				SEVEN[1] +=1;
			if(monthDay == 30) {
				SEVEN[6] +=1;
				SEVEN[0] +=1;
			}	
			}
		}
	}
	}
class startDayfuntion extends Calendar{
	int[] dayCount = {0,0,0,0,0,0,0};
	int share ; //몫
	int remainder; //나머지
	int startDayInput=0;
	public void Start_day() {//근무 시작일		
		 share = startDayInput /7;
		 remainder = (startDayInput % 7);
		 //나머지가 6일수도있잖아 
		 for(int i = 0 ; i<dayCount.length; i++) {
			dayCount[i] += share; 
		 }
		 //나머지 만큼 dayCount에 더하는 로직 
		 if(first_day.equals("월")) {
			for(int i = 0; i<remainder; i++) {
				dayCount[i] +=1;
			}
		 }
		 if(first_day.equals("화")) {
				for(int i = 1; i<remainder+1; i++) {
					dayCount[i] +=1;
				}		 
		 } //나머지가 6일때 값이 이상해짐.
		 if(first_day.equals("수")) {
			 if(remainder ==6) {
				 for(int i = 2; i<dayCount.length; i++) {
					 dayCount[i] +=1;
				 }
			 }
			 else if(remainder ==2) {
				dayCount[2] +=1;
			 }
			 else if(remainder ==3) {
				 dayCount[2] +=1;
				 dayCount[3] +=1;
			 }
			 else if(remainder ==4) {
				 dayCount[2] +=1;
				 dayCount[3] +=1;
				 dayCount[4] +=1;
			 }
			 else if(remainder ==5) {
				 dayCount[2] +=1;
				 dayCount[3] +=1;
				 dayCount[4] +=1;
				 dayCount[5] +=1;
			 }
	}
		 if(first_day.equals("목")) {
			 if(remainder == 5) {
				 for(int i = 3; i<dayCount.length; i++) {
					 dayCount[i] +=1;
				 }
			 }
			 else if(remainder == 6) {
				 for(int i = 3; i<dayCount.length; i++) {
					 dayCount[i] +=1;
				 }
				 dayCount[0] +=1;
			 }
			 else if(remainder ==2) {
				 dayCount[3] +=1;
			 }
			 else if(remainder ==3) {
				 dayCount[3] +=1;
				 dayCount[4] +=1;
			 }
			 else if(remainder ==4) {
				 dayCount[3] +=1;
				 dayCount[4] +=1;
				 dayCount[5] +=1;
				 
			 }
		 }
		 if(first_day.equals("금")) {
			 if(remainder ==4) {
				 for(int i = 4; i<dayCount.length; i++) {
					 dayCount[i] +=1;
				 }
			 }
			 else if(remainder == 5) {
				 for(int i = 4; i<dayCount.length; i++) {
					 dayCount[i] +=1;
				 }
				 dayCount[0] +=1;
			 }
			 else if(remainder == 6) {
				 for(int i = 4; i<dayCount.length; i++) {
					 dayCount[i] +=1;
				 }
				 dayCount[0] +=1;
				 dayCount[1] +=1;
			 }
			 else if(remainder ==2) {
				 dayCount[3] +=1;
			 }
			 else if(remainder ==3) {
				 dayCount[3] +=1;
				 dayCount[4] +=1;
			 }
		 }
		 if(first_day.equals("토")) {
			 if(remainder ==2) {
				 dayCount[5] +=1;
			 }
			 else if(remainder ==3) {
				 for(int i = 5; i<dayCount.length; i++) {
					 dayCount[i] +=1;
				 }
			 }
			for(int i = 4; i<7; i++) {
					  if(remainder == i) {
						 for(int j = 5; j< dayCount.length; j++) {
							 dayCount[j] +=1;
						 }
						 for(int k = 0; k< i-3; k++) {
							 dayCount[k] +=1;
						 		} 
					  }
		 }
		 }
		 if(first_day.equals("일")) {
		for(int j = 2; j<7; j++) {
			if(remainder ==j) {
				dayCount[6] +=1;
			for(int k = 0; k< j-2; k++) {
				dayCount[k] +=1;
					 }
				 }
			}
		}
		}

}
class PayCalculation extends startDayfuntion{
	static int pay = 8720;
	int mon=0, tue=0, wed=0,thur=0,fri=0,sat=0,sun=0;
	int mon_result=0, tue_result=0, wed_result=0,
			thur_result=0, fri_result=0, sat_result=0, sun_result=0 ;  
	int monStart=0,tueStart=0,wedStart=0,
			thurStart=0,friStart=0,satStart=0,sunStart=0;
	public void startDayconcept() {
		monStart = SEVEN[0] - dayCount[0];
		tueStart = SEVEN[1] - dayCount[1];
		wedStart = SEVEN[2] - dayCount[2];
		thurStart = SEVEN[3] - dayCount[3];
		friStart = SEVEN[4] - dayCount[4];
		satStart = SEVEN[5] - dayCount[5];
		sunStart = SEVEN[6] - dayCount[6];
	}
	public void startday_paycalculate() {
		mon_result = mon*monStart*pay;
		tue_result = tue*tueStart*pay;
		wed_result = wed*wedStart*pay;
		thur_result = thur*thurStart*pay;
		fri_result = fri*friStart*pay;
		sat_result = sat*satStart*pay;
		sun_result = sun*sunStart*pay;
	}
	public void payCalculate() {
		mon_result = mon*SEVEN[0]*pay;
		tue_result = tue*SEVEN[1]*pay;
		wed_result = wed*SEVEN[2]*pay;
		thur_result = thur*SEVEN[3]*pay;
		fri_result = fri*SEVEN[4]*pay;
		sat_result = sat*SEVEN[5]*pay;
		sun_result = sun*SEVEN[6]*pay;
	}
}
class Worker extends PayCalculation{ //날짜 클래스를 상속받음
	Scanner sc = new Scanner(System.in);
	int result=0;
	public void Jun_seok() {
	wed = 6;
	sun = 10;
	System.out.println("준석의 근무시작일을 입력해주세요");
	startDayInput = sc.nextInt();
	if(startDayInput > 1) {
		Start_day();
		//시작날짜 반영
		startDayconcept();
		startday_paycalculate();
		result = wed_result+sun_result;
		for(int i = 0; i< 7 ; i++) {
			dayCount[i] = 0;
		} //배열값을 다시 초기화시켜줘야함.
	}
	else{
		payCalculate();
		result = wed_result + sun_result;}
	System.out.println("준석이의 급여는"+result+"원 입니다!");
	}
	public void Jung_yun() {
	 mon = 4;
	 tue = 4;
	 wed = 3;
	 thur = 3;
		System.out.println("정연의 근무시작일을 입력해주세요");
		startDayInput = sc.nextInt() ;
		if(startDayInput > 1) {
			Start_day();
			startDayconcept();
			//총결과
			startday_paycalculate();
			result = mon_result + tue_result + wed_result+ thur_result;
			for(int i = 0; i< 7 ; i++) {
				dayCount[i] = 0;
			} //배열값을 다시 초기화시켜줘야함.
		}
		else{
			payCalculate();
			result = mon_result + tue_result + wed_result+ thur_result;}
	 System.out.println("정연이의 급여는"+result+"원 입니다!");
	} 
	public void Hee_jun() {
		mon = 5;
		tue = 5;
		wed = 6;
		thur = 4;
		sat = 4;		
			System.out.println("희준의 근무시작일을 입력해주세요");
			startDayInput = sc.nextInt();
			if(startDayInput > 1) {
				Start_day();
				 //시작날짜 반영
				startDayconcept();				
				startday_paycalculate();
				result = mon_result + tue_result + wed_result+ thur_result + sat_result;
				for(int i = 0; i< 7 ; i++) {
					dayCount[i] = 0;
				} //배열값을 다시 초기화시켜줘야함.
			}
			else{
				payCalculate();
				result = mon_result + tue_result + wed_result+ thur_result + sat_result;}	
		System.out.println("희준이의 급여는"+result+"원 입니다!");
	}
	public void Chae_young() {
		thur = 4;
		fri = 10;
			System.out.println("채영의 근무시작일을 입력해주세요");
			startDayInput = sc.nextInt();
			if(startDayInput > 1) {
				Start_day();
				//근무시작날짜
				startDayconcept();
				startday_paycalculate();
				result = thur_result+fri_result;
				for(int i = 0; i< 7 ; i++) {
					dayCount[i] = 0;
				} //배열값을 다시 초기화시켜줘야함.
			}	
			else{
				payCalculate();
				result = thur_result + fri_result;
				}
		System.out.println("채영이의 급여는"+result+"원 입니다!");
	}
	public void Jae_lim() {
		fri = 6;
		sat = 5;
		System.out.println("재림의 근무시작일을 입력해주세요");
		startDayInput = sc.nextInt();
		if(startDayInput > 1) {
			Start_day();
			//근무시작날짜
			startDayconcept();
			startday_paycalculate();
			result =fri_result+sat_result;
			for(int i = 0; i< 7 ; i++) {
				dayCount[i] = 0;
			} //배열값을 다시 초기화시켜줘야함.
		}
		else{
			payCalculate();
			result = fri_result+sat_result;
			}
	System.out.println("재림이의 급여는"+result+"원 입니다!");
	}
	public void Su_yun() {
		sat = 6;
		sun = 8;
			System.out.println("수연의 근무시작일을 입력해주세요");
			startDayInput = sc.nextInt();
			if(startDayInput > 1) {
				Start_day();
				//근무시작날짜
				startDayconcept();
				startday_paycalculate();
				result = sat_result +sun_result;
				for(int i = 0; i< 7 ; i++) {
					dayCount[i] = 0;
				} //배열값을 다시 초기화시켜줘야함.
			}
			else{
				payCalculate();
				result = sat_result + sun_result;}
		System.out.println("수연이의 급여는"+result+"원 입니다!");
	}
	public void Ga_young() {
		mon = 3;
		tue = 3;
		wed = 4;
		thur = 4;
			System.out.println("가영의 근무시작일을 입력해주세요");
			startDayInput = sc.nextInt();
			if(startDayInput > 1) {
				Start_day();
				//근무시작날자
				startDayconcept();
				startday_paycalculate();
				result = mon_result+tue_result+wed_result+thur_result;
				for(int i = 0; i< 7 ; i++) {
					dayCount[i] = 0;
				} //배열값을 다시 초기화시켜줘야함.
			}
			else{
				payCalculate();
				result = mon_result + tue_result + wed_result + thur_result;}
		System.out.println("가영이의 급여는"+result+"원 입니다!");
	}
	public void Min_ji() {
		mon = 7;
		tue = 7;
			System.out.println("민지의 근무시작일을 입력해주세요");
			startDayInput = sc.nextInt();
			if(startDayInput > 1) {
				Start_day();
				 //시작날짜 반영
				startDayconcept();
				startday_paycalculate();
				result = mon_result + tue_result;
				for(int i = 0; i< 7 ; i++) {
					dayCount[i] = 0;
				} //배열값을 다시 초기화시켜줘야함.
			}
			else{
				payCalculate();
				result = mon_result+ tue_result;}
		System.out.println("민지의 급여는"+result+"원 입니다!");
	}
	public void Se_bin() {
	thur = 4;
	fri =3;
	sat = 3; 
		System.out.println("세빈의 근무시작일을 입력해주세요");
		startDayInput = sc.nextInt();
		if(startDayInput > 1) {
			Start_day();
			startDayconcept();
			startday_paycalculate();
			result = thur_result+fri_result+sat_result;
			for(int i = 0; i< 7 ; i++) {
				dayCount[i] = 0;
			} //배열값을 다시 초기화시켜줘야함.
		}
		else{
			payCalculate();
			result = thur_result + fri_result + sat_result;
			}
	System.out.println("세빈이의 급여는"+result+"원 입니다!");
	}
	public void De_ta() {//대타자
	}	
}
public class javapractice {
	public static void main(String[] args) {
		Worker c1 = new Worker();
		c1.input();
		c1.Leap_year();
		c1.Start_day_Select();
		c1.Jun_seok();
		c1.Jung_yun();
		c1.Hee_jun();
		c1.Chae_young();
		c1.Jae_lim();
		c1.Su_yun();
		c1.Ga_young();
		c1.Min_ji();
		c1.Se_bin();
	}   	
}
